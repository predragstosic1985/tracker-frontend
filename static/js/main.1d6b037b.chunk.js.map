{"version":3,"sources":["Components/Tracker/TrackerUserEdit.module.scss","Components/Auth/AuthContext.js","Components/Modals/CredentialsModal.jsx","Components/Assets/pic1.png","services/services.js","Components/Login/LoginPage.jsx","Components/AppRouter/ProtectedRoute.jsx","Components/Modals/CreateForm.jsx","Components/Modals/CreateModal.jsx","Components/Tracker/TrackerItem.jsx","Components/Tracker/TrackerItemEdit.jsx","Components/Tracker/TrackerForm.jsx","Components/Tracker/TrackerUserEdit.jsx","Components/Tracker/TrackerUser.jsx","Components/Modals/DeleteModal.jsx","StyledComponents/AppBar.styled.js","StyledComponents/Button.styled.js","StyledComponents/Typography.styled.js","Components/Layout/NavBar.jsx","Components/Layout/ScrollTop.jsx","Components/Layout/Layout.jsx","hooks/isMounted.js","hooks/Fetcher.js","Components/Tracker/Tracker.jsx","Components/AppRouter/AppRouter.jsx","App.js","index.js"],"names":["module","exports","AuthContext","createContext","token","localStorage","getItem","refreshToken","email","initialState","authReducer","authState","action","type","setItem","clear","init","AuthContextProvider","props","useReducer","value","dispatch","Provider","children","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","CredentialsModal","openModal","setOpenModal","Modal","open","onClose","Box","sx","Typography","id","variant","component","mt","baseLink","getTrackerData","a","axios","get","headers","Authorization","data","updateMeasurementData","updatedValues","put","updateUserData","updatedUser","loginUser","user","post","Copyright","color","align","Link","href","target","rel","Date","getFullYear","LoginPage","useContext","authorized","password","history","useHistory","useState","inputsError","setInputsError","setUser","showPassword","setShowPassword","useEffect","errors","Object","keys","forEach","propName","isEmpty","handleOnChange","e","name","onSubmit","content","isEqual","postUser","response","push","console","log","Grid","container","height","item","xs","sm","md","backgroundImage","imageSrc","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","my","mx","display","flexDirection","alignItems","Avatar","m","FormControl","fullWidth","required","marginBottom","InputLabel","htmlFor","OutlinedInput","autoComplete","label","onChange","error","endAdornment","InputAdornment","IconButton","onClick","edge","Button","mb","ProtectedRoute","Component","rest","render","CreateForm","saveUpdateMeasurement","initObj","date","weight","newMeasurement","setNewMeasurement","saveNewMeasurement","repackForSend","getTime","parseFloat","toFixed","Card","CardContent","flexWrap","size","DateTimePicker","newDate","_d","renderInput","params","TextField","CardActions","ButtonGroup","float","marginLeft","startIcon","CreateModal","Dialog","DialogContent","TrackerItem","handleEditMode","index","handleDelteClick","fontSize","gutterBottom","marginTop","setEditMode","miniLoader","setMiniLoader","updateMeasurement","setUpdateMeasurement","onSave","Stack","spacing","Skeleton","TrackerForm","userDeatils","measurements","editMode","setOpenDeleteModal","setSelectedItem","selectedItem","handleAddNewClick","timeFormater","dateToFormat","dateFormated","toLocaleTimeString","dateFormater","dateCreate","moment","format","Timeline","fontStyle","firstName","disabled","marginRight","map","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","py","px","TrackerItemEdit","TrackerUserEdit","reFetchTrackerData","setEditUserMode","fields","lastName","updateUser","setUpdateUser","repackObj","docID","formItemChangeHandler","fieldName","inputType","className","styles","buttonGroup","cancelButton","saveButton","TrackerUser","loadingTrackerData","editUserMode","Header","List","ListItem","secondaryAction","ListItemAvatar","ListItemText","primaryTypographyProps","fontWeight","primary","Item","other","borderRadius","textAlign","margin","gap","gridTemplateColumns","filter","allowEdit","DeleteModal","openDeleteModal","DialogActions","CustomHeader","styled","styledComponentProp","AppBar","configuration","footer","background","fontColor","fontFamily","header","StyledFab","button","btnBackground","Fab","StyledIconButton","StyledTypography","typography","NavBar","mainBackground","Toolbar","flexGrow","mr","ScrollTop","window","trigger","useScrollTrigger","undefined","disableHysteresis","threshold","Zoom","in","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","bottom","right","Layout","useIsMounted","isMounted","useRef","current","setter","useFetchier","fetchFn","fetchOnQ","withoutLoadingOnMount","setStateIfMounted","shouldFetch","setShouldFetch","setData","loading","setLoading","asyncFetch","bind","Tracker","trackerData","setTrackerData","setUserDetails","setMeasurements","sortedData","sortBy","dateObj","reverse","method","newValues","prepare","splice","direction","Backdrop","zIndex","theme","drawer","CircularProgress","lg","AppRouter","exact","path","App","createTheme","ThemeProvider","CssBaseline","LocalizationProvider","dateAdapter","DateAdapter","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1d6b037b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGroup\":\"TrackerUserEdit_buttonGroup__2adun\",\"saveButton\":\"TrackerUserEdit_saveButton__2uBu_\",\"cancelButton\":\"TrackerUserEdit_cancelButton__1gXlB\"};","import React, { createContext, useReducer } from \"react\";\r\n\r\nconst AuthContext = createContext(null);\r\n//  using local storage instead of using session storage because it is a common practice for token storing\r\nconst token = localStorage.getItem(\"token\");\r\nconst refreshToken = localStorage.getItem(\"refreshToken\");\r\nconst email = localStorage.getItem(\"email\");\r\nconst initialState = {\r\n  token: token ? token : null,\r\n  refreshToken: refreshToken ? refreshToken : null,\r\n  email: email ? email : null,\r\n};\r\n\r\nconst authReducer = (authState, action) => {\r\n  // actions for setting, getting, and removing token\r\n  switch (action.type) {\r\n    case \"set\":\r\n      localStorage.setItem(\"token\", action.token);\r\n      localStorage.setItem(\"refreshToken\", action.refreshToken);\r\n      localStorage.setItem(\"email\", action.email);\r\n      return {\r\n        token: action.token,\r\n        refreshToken: action.refreshToken,\r\n        email: action.email,\r\n      };\r\n    case \"get\":\r\n      return { ...authState };\r\n    case \"del\":\r\n      localStorage.clear();\r\n      return { token: null, refreshToken: null, email: null };\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nconst init = (initialState) => {\r\n  return { ...initialState };\r\n};\r\n\r\nconst AuthContextProvider = (props) => {\r\n  // for the third argument check the link below for more info\r\n  // https://reactjs.org/docs/hooks-reference.html#lazy-initialization\r\n  const [authState, dispatch] = useReducer(authReducer, initialState, init);\r\n  // returning state with valid token and refresh token, and dispatch for actions\r\n  const value = { authState, dispatch };\r\n  return (\r\n    <AuthContext.Provider value={value}>{props.children}</AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, AuthContextProvider };\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nconst CredentialsModal = ({ openModal, setOpenModal }) => {\r\n  const handleClose = () => setOpenModal(false);\r\n\r\n  return (\r\n    <Modal\r\n      open={openModal}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box sx={style}>\r\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n          Credentials\r\n        </Typography>\r\n        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n          Please check your credentials.\r\n          <br />\r\n          Email: user@auth.com\r\n          <br />\r\n          Password: user1234\r\n        </Typography>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CredentialsModal;\r\n","export default __webpack_public_path__ + \"static/media/pic1.eaa224e8.png\";","import axios from \"axios\";\r\n\r\n// const baseLink = \"http://localhost:5000/api\";\r\nconst baseLink = \"https://backend-tracker.herokuapp.com/api\";\r\n\r\n// TODO deafult options header\r\n// const defaultOptions = {};\r\n\r\nexport const getTrackerData = async (token) => {\r\n  const data = await axios.get(`${baseLink}/tracker/read`, {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const updateMeasurementData = async (id, updatedValues, token) => {\r\n  const data = await axios.put(\r\n    `${baseLink}/tracker/update/${id}`,\r\n    updatedValues,\r\n    {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    }\r\n  );\r\n  return data;\r\n};\r\n\r\nexport const updateUserData = async (id, updatedUser, token) => {\r\n  const data = await axios.put(\r\n    `${baseLink}/tracker/update/${id}`,\r\n    updatedUser,\r\n    {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    }\r\n  );\r\n  return data;\r\n};\r\n\r\nexport const loginUser = async (user) => {\r\n  const data = await axios.post(`${baseLink}/login`, user);\r\n  return data;\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\r\nimport CredentialsModal from \"../Modals/CredentialsModal\";\r\nimport imageSrc from \"../Assets/pic1.png\";\r\nimport { isEmpty, isEqual } from \"lodash\";\r\nimport { loginUser } from \"../../services/services\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Auth/AuthContext\";\r\n\r\nconst Copyright = (props) => {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Copyright ©PredragStosic \"}\r\n      <Link\r\n        color=\"inherit\"\r\n        href=\"https://github.com/predragstosic1985/tracker-frontend\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Github repo\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst LoginPage = () => {\r\n  const { dispatch } = useContext(AuthContext);\r\n  const authorized = {\r\n    email: \"user@auth.com\",\r\n    password: \"user1234\",\r\n  };\r\n  const history = useHistory();\r\n  const initState = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const [inputsError, setInputsError] = useState({});\r\n  const [user, setUser] = useState(initState);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const errors = { ...inputsError };\r\n    Object.keys(errors).forEach((propName) => {\r\n      if (!isEmpty(user[propName])) {\r\n        delete errors[propName];\r\n      }\r\n    });\r\n    setInputsError(errors);\r\n  }, [user]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleOnChange = (e, data) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    const errors = {};\r\n    Object.keys(user).forEach((propName) => {\r\n      if (isEmpty(user[propName])) {\r\n        errors[propName] = { content: \"Please add a value\" };\r\n      }\r\n    });\r\n    if (!isEmpty(errors)) {\r\n      setInputsError(errors);\r\n    } else if (!isEqual(user, authorized)) {\r\n      setOpenModal(true);\r\n    } else {\r\n      postUser();\r\n    }\r\n  };\r\n\r\n  const postUser = async () => {\r\n    try {\r\n      const response = await loginUser(user);\r\n\r\n      if (response) {\r\n        history.push(\"/tracker\");\r\n        dispatch({\r\n          type: \"set\",\r\n          token: response.data.token,\r\n          refreshToken: response.data.refreshToken,\r\n          email: response.data.email,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\r\n      <Grid\r\n        item\r\n        xs={false}\r\n        sm={4}\r\n        md={7}\r\n        sx={{\r\n          // backgroundImage: 'url(https://source.unsplash.com/random)',\r\n          backgroundImage: `url(${imageSrc})`,\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundColor: (t) =>\r\n            t.palette.mode === \"light\"\r\n              ? t.palette.grey[50]\r\n              : t.palette.grey[900],\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n        }}\r\n      />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <Box\r\n          sx={{\r\n            my: 8,\r\n            mx: 4,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" sx={{ mt: 1 }}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              fullWidth={true}\r\n              required\r\n              sx={{ marginBottom: \"1rem\" }}\r\n            >\r\n              <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n              <OutlinedInput\r\n                autoComplete=\"off\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type={\"text\"}\r\n                label=\"Email\"\r\n                onChange={handleOnChange}\r\n                error={!!inputsError.email}\r\n                value={user.email}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <PersonOutlineIcon />\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n            <FormControl variant=\"outlined\" fullWidth={true} required>\r\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n              <OutlinedInput\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                autoComplete=\"off\"\r\n                error={!!inputsError.password}\r\n                value={user.password}\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                onChange={handleOnChange}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={onSubmit}\r\n              fullWidth={true}\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign in\r\n            </Button>\r\n            <Copyright sx={{ mt: 5 }} />\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n      <CredentialsModal openModal={openModal} setOpenModal={setOpenModal} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default LoginPage;\r\n","import React, { useContext } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Auth/AuthContext\";\r\nimport LoginPage from \"../Login/LoginPage\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  // calling authState for token check\r\n  const { authState } = useContext(AuthContext);\r\n\r\n  // {...rest} represents all props for example some custom prop via router\r\n  // {...props} represents all dependency props for a component like history etc.\r\n  return (\r\n    <>\r\n      <Route\r\n        {...rest}\r\n        render={(props) => {\r\n          return authState.token ? (\r\n            <>\r\n              <Component {...rest} {...props} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <LoginPage />\r\n            </>\r\n          );\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default ProtectedRoute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nconst CreateForm = ({ setOpenModal, saveUpdateMeasurement }) => {\r\n  const initObj = {\r\n    id: \"\",\r\n    date: new Date(),\r\n    weight: \"\",\r\n  };\r\n  const [newMeasurement, setNewMeasurement] = useState(initObj);\r\n  const [inputsError, setInputsError] = useState({});\r\n\r\n  useEffect(() => {\r\n    const errors = { ...inputsError };\r\n    Object.keys(errors).forEach((propName) => {\r\n      if (!isEmpty(newMeasurement[propName])) {\r\n        delete errors[propName];\r\n      }\r\n    });\r\n    setInputsError(errors);\r\n  }, [newMeasurement]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onSubmit = () => {\r\n    const errors = {};\r\n    Object.keys(newMeasurement).forEach((propName) => {\r\n      if (isEmpty(newMeasurement[propName])) {\r\n        if (propName === \"weight\") {\r\n          errors[propName] = { content: \"Please add a value\" };\r\n        }\r\n      }\r\n    });\r\n    isEmpty(errors)\r\n      ? saveNewMeasurement(newMeasurement)\r\n      : setInputsError(errors);\r\n  };\r\n\r\n  const saveNewMeasurement = (e, data) => {\r\n    const repackForSend = {\r\n      ...newMeasurement,\r\n      date: newMeasurement.date.getTime(),\r\n      weight: parseFloat(newMeasurement.weight).toFixed(2),\r\n    };\r\n    saveUpdateMeasurement(\"create\", repackForSend);\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const handleChangeDate = (newDate) => {\r\n    if (newDate) {\r\n      setNewMeasurement({ ...newMeasurement, date: newDate._d });\r\n    }\r\n  };\r\n\r\n  const handleOnChange = ({ target }) => {\r\n    setNewMeasurement({ ...newMeasurement, weight: target.value });\r\n  };\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Box\r\n          sx={{ display: \"flex\", flexWrap: \"wrap\" }}\r\n          component=\"form\"\r\n          autoComplete=\"off\"\r\n        >\r\n          <FormControl sx={{ m: 1 }} variant=\"outlined\" size=\"small\" fullWidth>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-weight\"\r\n              type={\"number\"}\r\n              value={newMeasurement.weight}\r\n              error={!!inputsError.weight}\r\n              onChange={handleOnChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton aria-label=\"weight\" edge=\"end\">\r\n                    kg\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n          <FormControl sx={{ m: 1 }} variant=\"outlined\" size=\"small\" fullWidth>\r\n            <DateTimePicker\r\n              label=\"Select Date and Time\"\r\n              value={newMeasurement.date}\r\n              onChange={handleChangeDate}\r\n              renderInput={(params) => <TextField {...params} />}\r\n            />\r\n          </FormControl>\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions>\r\n        <ButtonGroup sx={{ float: \"right\", marginLeft: \"auto\" }}>\r\n          <Button\r\n            onClick={handleClose}\r\n            color=\"inherit\"\r\n            variant=\"contained\"\r\n            startIcon={<CancelIcon />}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={onSubmit}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<CheckIcon />}\r\n          >\r\n            Save\r\n          </Button>\r\n        </ButtonGroup>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CreateForm;\r\n","import React from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport CreateForm from \"./CreateForm\";\r\n\r\nconst CreateModal = ({ openModal, setOpenModal, saveUpdateMeasurement }) => {\r\n  return (\r\n    <Dialog open={openModal} aria-labelledby=\"draggable-dialog-title\">\r\n      <DialogContent>\r\n        <CreateForm\r\n          openModal={openModal}\r\n          setOpenModal={setOpenModal}\r\n          saveUpdateMeasurement={saveUpdateMeasurement}\r\n        />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default CreateModal;\r\n","import React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\r\n\r\nconst TrackerItem = ({\r\n  handleEditMode,\r\n  weight,\r\n  date,\r\n  index,\r\n  handleDelteClick,\r\n}) => {\r\n  return (\r\n    <Card sx={{ height: \"12rem\" }}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" component=\"span\">\r\n          {weight}kg\r\n        </Typography>\r\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n          {date}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <div style={{ float: \"right\", marginLeft: \"auto\", marginTop: \"2rem\" }}>\r\n          <IconButton aria-label=\"edit\" onClick={() => handleEditMode(index)}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            color=\"error\"\r\n            aria-label=\"delete\"\r\n            onClick={() => handleDelteClick(index)}\r\n          >\r\n            <DeleteOutlineIcon />\r\n          </IconButton>\r\n        </div>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\nexport default TrackerItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport Box from \"@mui/material/Box\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nconst TrackerItem = ({\r\n  setEditMode,\r\n  date,\r\n  weight,\r\n  saveUpdateMeasurement,\r\n  index,\r\n  miniLoader,\r\n  setMiniLoader,\r\n}) => {\r\n  // milliseconds = date.getTime();\r\n  const initObj = {\r\n    id: \"\",\r\n    date: new Date(),\r\n    weight: \"\",\r\n  };\r\n\r\n  const [updateMeasurement, setUpdateMeasurement] = useState(initObj);\r\n  const [inputsError, setInputsError] = useState({});\r\n\r\n  useEffect(() => {\r\n    const errors = { ...inputsError };\r\n    Object.keys(errors).forEach((propName) => {\r\n      if (!isEmpty(updateMeasurement[propName])) {\r\n        delete errors[propName];\r\n      }\r\n    });\r\n    setInputsError(errors);\r\n  }, [updateMeasurement]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (date && weight) {\r\n      setUpdateMeasurement({\r\n        id: index,\r\n        date: new Date(date),\r\n        weight: parseFloat(weight).toFixed(2),\r\n      });\r\n    }\r\n  }, [date, weight, index]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleChangeDate = (newDate) => {\r\n    if (newDate) {\r\n      setUpdateMeasurement({ ...updateMeasurement, date: newDate._d });\r\n    }\r\n  };\r\n\r\n  const handleOnChange = ({ target }) => {\r\n    setUpdateMeasurement({ ...updateMeasurement, weight: target.value });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const errors = {};\r\n    Object.keys(updateMeasurement).forEach((propName) => {\r\n      if (isEmpty(updateMeasurement[propName])) {\r\n        if (propName === \"weight\") {\r\n          errors[propName] = { content: \"Please add a value\" };\r\n        }\r\n      }\r\n    });\r\n    isEmpty(errors) ? onSave(updateMeasurement) : setInputsError(errors);\r\n  };\r\n\r\n  const onSave = () => {\r\n    setMiniLoader(true);\r\n    const repackForSend = {\r\n      ...updateMeasurement,\r\n      date: updateMeasurement.date.getTime(),\r\n      weight: parseFloat(updateMeasurement.weight).toFixed(2),\r\n    };\r\n    saveUpdateMeasurement(\"update\", repackForSend);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {miniLoader ? (\r\n        <Stack spacing={1}>\r\n          <Skeleton variant=\"text\" />\r\n          <Skeleton variant=\"circular\" width={40} height={40} />\r\n          <Skeleton variant=\"rectangular\" width={\"100%\"} height={100} />\r\n        </Stack>\r\n      ) : (\r\n        <Card>\r\n          <CardContent>\r\n            <Box\r\n              sx={{ display: \"flex\", flexWrap: \"wrap\" }}\r\n              component=\"form\"\r\n              autoComplete=\"off\"\r\n            >\r\n              <FormControl\r\n                sx={{ m: 1 }}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n              >\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-weight\"\r\n                  type={\"number\"}\r\n                  value={updateMeasurement.weight}\r\n                  error={!!inputsError.weight}\r\n                  onChange={handleOnChange}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton aria-label=\"weight\" edge=\"end\">\r\n                        kg\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n              <FormControl\r\n                sx={{ m: 1 }}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n              >\r\n                <DateTimePicker\r\n                  label=\"Select Date and Time\"\r\n                  value={updateMeasurement.date}\r\n                  onChange={handleChangeDate}\r\n                  renderInput={(params) => <TextField {...params} />}\r\n                />\r\n              </FormControl>\r\n            </Box>\r\n          </CardContent>\r\n          <CardActions>\r\n            <ButtonGroup sx={{ float: \"right\", marginLeft: \"auto\" }}>\r\n              <Button\r\n                onClick={() => setEditMode(false)}\r\n                color=\"inherit\"\r\n                variant=\"contained\"\r\n                startIcon={<CancelIcon />}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={onSubmit}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<CheckIcon />}\r\n              >\r\n                Save\r\n              </Button>\r\n            </ButtonGroup>\r\n          </CardActions>\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default TrackerItem;\r\n","import React from \"react\";\r\nimport Timeline from \"@mui/lab/Timeline\";\r\nimport TimelineItem from \"@mui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@mui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@mui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@mui/lab/TimelineContent\";\r\nimport TimelineOppositeContent from \"@mui/lab/TimelineOppositeContent\";\r\nimport TimelineDot from \"@mui/lab/TimelineDot\";\r\nimport FitnessCenterIcon from \"@mui/icons-material/FitnessCenter\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TrackerItem from \"./TrackerItem\";\r\nimport TrackerItemEdit from \"./TrackerItemEdit\";\r\nimport moment from \"moment\";\r\n\r\nconst TrackerForm = ({\r\n  userDeatils,\r\n  measurements,\r\n  saveUpdateMeasurement,\r\n  setEditMode,\r\n  editMode,\r\n  miniLoader,\r\n  setMiniLoader,\r\n  setOpenDeleteModal,\r\n  handleDelteClick,\r\n  setSelectedItem,\r\n  selectedItem,\r\n  handleAddNewClick,\r\n}) => {\r\n  /* eslint-disable no-unused-vars */\r\n\r\n  const fields = [\r\n    {\r\n      fieldName: \"weight\",\r\n      propName: \"weight\",\r\n      inMainTable: true,\r\n      editable: true,\r\n      inputType: \"text\",\r\n      required: true,\r\n    },\r\n    {\r\n      fieldName: \"date\",\r\n      propName: \"date\",\r\n      inMainTable: true,\r\n      editable: true,\r\n      inputType: \"text\",\r\n    },\r\n  ];\r\n\r\n  // format time\r\n  const timeFormater = (dateToFormat) => {\r\n    let dateFormated = \"\";\r\n    if (dateToFormat) {\r\n      const dateCreate = new Date(dateToFormat);\r\n      dateFormated = dateCreate.toLocaleTimeString();\r\n    }\r\n    return dateFormated;\r\n  };\r\n\r\n  // format date\r\n  const dateFormater = (dateToFormat) => {\r\n    let dateFormated = \"\";\r\n    if (dateToFormat) {\r\n      const dateCreate = new Date(dateToFormat);\r\n      dateFormated = moment(dateCreate).format(\"Do MMMM YYYY\");\r\n    }\r\n    return dateFormated;\r\n  };\r\n\r\n  const handleEditMode = (id) => {\r\n    setSelectedItem(id);\r\n    setEditMode(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Timeline position=\"alternate\" sx={{ bgcolor: \"#f5f5f5\" }}>\r\n        <Typography\r\n          variant=\"h6\"\r\n          component=\"span\"\r\n          align=\"center\"\r\n          sx={{ marginTop: \"1rem\", fontStyle: \"oblique\" }}\r\n        >\r\n          Welcome {userDeatils ? userDeatils.firstName : \"\"}\r\n        </Typography>\r\n        <Button\r\n          onClick={handleAddNewClick}\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          disabled={editMode}\r\n          sx={{\r\n            width: \"8rem\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"1rem\",\r\n            marginBottom: \"1rem\",\r\n          }}\r\n        >\r\n          Add new\r\n        </Button>\r\n        {measurements ? (\r\n          measurements.map((item, index) => (\r\n            <TimelineItem key={index}>\r\n              <TimelineOppositeContent\r\n                sx={{ m: \"auto 0\" }}\r\n                align=\"right\"\r\n                variant=\"body2\"\r\n                color=\"text.secondary\"\r\n              >\r\n                {timeFormater(measurements[index][\"date\"])}\r\n              </TimelineOppositeContent>\r\n              <TimelineSeparator>\r\n                <TimelineDot>\r\n                  <FitnessCenterIcon />\r\n                </TimelineDot>\r\n                <TimelineConnector />\r\n              </TimelineSeparator>\r\n              <TimelineContent sx={{ py: \"12px\", px: 2 }}>\r\n                {editMode && selectedItem === index ? (\r\n                  <TrackerItemEdit\r\n                    setEditMode={setEditMode}\r\n                    date={measurements[index][\"date\"]}\r\n                    weight={measurements[index][\"weight\"]}\r\n                    saveUpdateMeasurement={saveUpdateMeasurement}\r\n                    index={index}\r\n                    miniLoader={miniLoader}\r\n                    setMiniLoader={setMiniLoader}\r\n                  />\r\n                ) : (\r\n                  <TrackerItem\r\n                    weight={measurements[index][\"weight\"]}\r\n                    date={dateFormater(measurements[index][\"date\"])}\r\n                    handleEditMode={handleEditMode}\r\n                    setOpenDeleteModal={setOpenDeleteModal}\r\n                    handleDelteClick={handleDelteClick}\r\n                    index={index}\r\n                  />\r\n                )}\r\n              </TimelineContent>\r\n            </TimelineItem>\r\n          ))\r\n        ) : (\r\n          <div />\r\n        )}\r\n      </Timeline>\r\n    </>\r\n  );\r\n};\r\nexport default TrackerForm;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport { isEmpty } from \"lodash\";\r\nimport { updateUserData } from \"../../services/services\";\r\nimport { AuthContext } from \"../Auth/AuthContext\";\r\nimport styles from \"./TrackerUserEdit.module.scss\";\r\n\r\nconst TrackerUserEdit = ({\r\n  reFetchTrackerData,\r\n  setEditUserMode,\r\n  userDeatils,\r\n  fields,\r\n}) => {\r\n  const { authState } = useContext(AuthContext);\r\n  const [updateUser, setUpdateUser] = useState(\r\n    userDeatils\r\n      ? { firstName: userDeatils.firstName, lastName: userDeatils.lastName }\r\n      : {\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n        }\r\n  );\r\n  const [inputsError, setInputsError] = useState({});\r\n\r\n  useEffect(() => {\r\n    const errors = { ...inputsError };\r\n    Object.keys(errors).forEach((propName) => {\r\n      if (!isEmpty(updateUser[propName])) {\r\n        delete errors[propName];\r\n      }\r\n    });\r\n    setInputsError(errors);\r\n  }, [updateUser]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onSubmit = () => {\r\n    const errors = {};\r\n    Object.keys(updateUser).forEach((propName) => {\r\n      if (isEmpty(updateUser[propName])) {\r\n        errors[propName] = {\r\n          content: \"Please add value.\",\r\n        };\r\n      }\r\n    });\r\n    isEmpty(errors) ? onSave(updateUser) : setInputsError(errors);\r\n  };\r\n\r\n  const onSave = async () => {\r\n    setEditUserMode(false);\r\n    const repackObj = {\r\n      ...userDeatils,\r\n      firstName: updateUser.firstName,\r\n      lastName: updateUser.lastName,\r\n    };\r\n\r\n    try {\r\n      const response = await updateUserData(\r\n        userDeatils.docID,\r\n        repackObj,\r\n        authState.token\r\n      );\r\n      if (response) {\r\n        reFetchTrackerData();\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    } finally {\r\n      setEditUserMode(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setEditUserMode(false);\r\n  };\r\n\r\n  const formItemChangeHandler = ({ target }) => {\r\n    setUpdateUser({\r\n      ...updateUser,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          display: \"grid\",\r\n        }}\r\n      >\r\n        {userDeatils ? (\r\n          fields.map(({ fieldName, propName, inputType }, index) => (\r\n            <FormControl\r\n              key={index}\r\n              variant=\"outlined\"\r\n              fullWidth={true}\r\n              required\r\n              sx={{ marginBottom: \"1rem\" }}\r\n            >\r\n              <InputLabel htmlFor={fieldName}>{fieldName}</InputLabel>\r\n              <OutlinedInput\r\n                autoComplete=\"off\"\r\n                id={propName}\r\n                name={propName}\r\n                type={inputType}\r\n                label={fieldName}\r\n                onChange={formItemChangeHandler}\r\n                error={!!inputsError[propName]}\r\n                value={updateUser[propName]}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <PersonOutlineIcon />\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n          ))\r\n        ) : (\r\n          <Box />\r\n        )}\r\n        <ButtonGroup className={styles.buttonGroup}>\r\n          <Button\r\n            onClick={handleClose}\r\n            variant=\"contained\"\r\n            className={styles.cancelButton}\r\n            startIcon={<CancelIcon />}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={onSubmit}\r\n            variant=\"contained\"\r\n            className={styles.saveButton}\r\n            startIcon={<CheckIcon />}\r\n          >\r\n            Save\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\nexport default TrackerUserEdit;\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport TrackerUserEdit from \"./TrackerUserEdit\";\r\nimport fields from \"./fields.json\";\r\n\r\nconst TrackerUser = ({\r\n  userDeatils,\r\n  loadingTrackerData,\r\n  editUserMode,\r\n  setEditUserMode,\r\n  reFetchTrackerData,\r\n  editMode,\r\n}) => {\r\n  const Header = (props) => {\r\n    const handleEditUser = () => {\r\n      setEditUserMode(true);\r\n    };\r\n    return (\r\n      <Grid item xs={12} md={12}>\r\n        <List>\r\n          <ListItem\r\n            secondaryAction={\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"edit\"\r\n                onClick={handleEditUser}\r\n                disabled={editUserMode || editMode}\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n            }\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <PersonOutlineIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primaryTypographyProps={{\r\n                color: \"#009fdf\",\r\n                fontWeight: \"700\",\r\n                fontSize: 19,\r\n                fontStyle: \"oblique\",\r\n              }}\r\n              primary=\"User details\"\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const Item = (props) => {\r\n    const { sx, ...other } = props;\r\n    return (\r\n      <Box\r\n        sx={{\r\n          bgcolor: \"#fff\",\r\n          p: 1,\r\n          borderRadius: 1,\r\n          textAlign: \"left\",\r\n          fontSize: 17,\r\n          fontWeight: \"600\",\r\n          margin: \"0.3rem\",\r\n          ...sx,\r\n        }}\r\n        {...other}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {loadingTrackerData ? (\r\n        <Stack\r\n          spacing={1}\r\n          sx={{ margin: \"auto\" }}\r\n          height={\"70vh\"}\r\n          width={\"50vw\"}\r\n        >\r\n          <Skeleton variant=\"text\" width={\"30vw\"} />\r\n          <Skeleton variant=\"circular\" width={40} height={40} />\r\n          <Skeleton variant=\"rectangular\" height={\"20vh\"} width={\"30vw\"} />\r\n        </Stack>\r\n      ) : (\r\n        <Grid\r\n          sx={{\r\n            marginTop: \"1rem\",\r\n            bgcolor: \"#f5f5f5\",\r\n            color: \"#e4e6e7\",\r\n          }}\r\n        >\r\n          <Header />\r\n          {userDeatils && !editUserMode ? (\r\n            fields.map(({ fieldName, propName }, index) => (\r\n              <Box\r\n                key={index}\r\n                sx={{\r\n                  display: \"grid\",\r\n                  gap: 2,\r\n                  gridTemplateColumns: \"repeat(2, 1fr)\",\r\n                }}\r\n              >\r\n                <Item sx={{ color: \"#009fdf\" }}>{fieldName}</Item>\r\n                <Item sx={{ color: \"#9a9797\" }}> {userDeatils[propName]}</Item>\r\n              </Box>\r\n            ))\r\n          ) : (\r\n            <Box />\r\n          )}\r\n          {editUserMode ? (\r\n            <TrackerUserEdit\r\n              userDeatils={userDeatils}\r\n              fields={fields.filter(({ allowEdit }) => allowEdit)}\r\n              setEditUserMode={setEditUserMode}\r\n              reFetchTrackerData={reFetchTrackerData}\r\n            />\r\n          ) : (\r\n            <div />\r\n          )}\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default TrackerUser;\r\n","import React from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst DeleteModal = ({\r\n  openDeleteModal,\r\n  setOpenDeleteModal,\r\n  saveUpdateMeasurement,\r\n}) => {\r\n  const handleOnDeleteClick = () => {\r\n    setOpenDeleteModal(false);\r\n    saveUpdateMeasurement(\"delete\");\r\n  };\r\n  return (\r\n    <Dialog open={openDeleteModal} aria-labelledby=\"draggable-dialog-title\">\r\n      <DialogContent>\r\n        Are you sure you want to delete the measurement?\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <ButtonGroup sx={{ float: \"right\", marginLeft: \"auto\" }}>\r\n          <Button\r\n            color=\"inherit\"\r\n            onClick={() => setOpenDeleteModal(false)}\r\n            variant=\"contained\"\r\n            startIcon={<CancelIcon />}\r\n          >\r\n            No\r\n          </Button>\r\n          <Button\r\n            onClick={handleOnDeleteClick}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<CheckIcon />}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </ButtonGroup>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default DeleteModal;\r\n","import styled from 'styled-components';\r\nimport AppBar from '@mui/material/AppBar';\r\n\r\nexport const CustomFooter = styled(({ styledComponentProp, ...rest }) => (\r\n  <AppBar color='inherit' {...rest}></AppBar>\r\n))`\r\n  background-color: ${props =>\r\n    props.configuration.footer.background} !important;\r\n  background: ${props => props.configuration.footer.background} !important;\r\n  color: ${props => props.configuration.footer.fontColor}!important;\r\n  font-family: ${props => props.configuration.footer.fontFamily}!important;\r\n`;\r\n\r\nexport const CustomHeader = styled(({ styledComponentProp, ...rest }) => (\r\n  <AppBar color='inherit' {...rest}></AppBar>\r\n))`\r\n  background-color: ${props =>\r\n    props.configuration.header.background} !important;\r\n  background: ${props => props.configuration.header.background} !important;\r\n  color: ${props => props.configuration.header.fontColor}!important;\r\n  font-family: ${props => props.configuration.header.fontFamily}!important;\r\n`;\r\n","import styled from 'styled-components';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nexport const StyledButtonPlain = styled(Button)`\r\n  color: white !important;\r\n  background-color: red !important;\r\n  &:hover {\r\n    color: blue !important;\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled(({ styledComponentProp, ...rest }) => (\r\n  <Button {...rest}></Button>\r\n))`\r\n  background-color: ${props =>\r\n    props.configuration.button.btnBackground} !important;\r\n  color: ${props => props.configuration.button.fontColor}!important;\r\n  font-family: ${props => props.configuration.button.fontFamily}!important;\r\n`;\r\n\r\nexport const StyledFab = styled(({ styledComponentProp, ...rest }) => (\r\n  <Fab {...rest}></Fab>\r\n))`\r\n  background-color: ${props =>\r\n    props.configuration.button.btnBackground} !important;\r\n  color: ${props => props.configuration.button.fontColor}!important;\r\n  font-family: ${props => props.configuration.button.fontFamily}!important;\r\n`;\r\n\r\nexport const StyledIconButton = styled(({ styledComponentProp, ...rest }) => (\r\n  <IconButton {...rest}></IconButton>\r\n))`\r\n  background-color: ${props =>\r\n    props.configuration.button.btnBackground} !important;\r\n  color: ${props => props.configuration.button.fontColor}!important;\r\n  font-family: ${props => props.configuration.button.fontFamily}!important;\r\n`;\r\n","import styled from 'styled-components';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nexport const StyledTypography = styled(({ styledComponentProp, ...rest }) => (\r\n  <Typography {...rest}></Typography>\r\n))`\r\n  color: ${props => props.configuration.typography.fontColor}!important;\r\n  font-family: ${props => props.configuration.typography.fontFamily}!important;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CustomHeader } from \"../../StyledComponents/AppBar.styled\";\r\nimport { StyledIconButton } from \"../../StyledComponents/Button.styled\";\r\nimport { StyledTypography } from \"../../StyledComponents/Typography.styled\";\r\nimport { AuthContext } from \"../Auth/AuthContext\";\r\n\r\nconst NavBar = (props) => {\r\n  const { dispatch } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const configuration = {\r\n    mainBackground: \"#b51783\",\r\n    button: {\r\n      btnBackground: \"#0067df\",\r\n      fontColor: \"#F6F6F6\",\r\n      fontFamily: \"Roboto\",\r\n    },\r\n    typography: {\r\n      fontColor: \"#F6F6F6\",\r\n      fontFamily: \"Roboto\",\r\n    },\r\n    header: {\r\n      background: \"#009fdf\",\r\n      fontColor: \"#F6F6F6\",\r\n      fontFamily: \"Roboto\",\r\n    },\r\n  };\r\n\r\n  const logutUser = () => {\r\n    history.push(\"/\");\r\n    dispatch({\r\n      type: \"del\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <CustomHeader configuration={configuration}>\r\n      <Toolbar>\r\n        <StyledTypography\r\n          configuration={configuration}\r\n          variant=\"h6\"\r\n          sx={{ flexGrow: 1, marginLeft: \"1rem\" }}\r\n        >\r\n          Tracker\r\n        </StyledTypography>\r\n        <StyledIconButton\r\n          configuration={configuration}\r\n          onClick={logutUser}\r\n          size=\"large\"\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          sx={{ mr: 2 }}\r\n        >\r\n          <PowerSettingsNewIcon />\r\n        </StyledIconButton>\r\n      </Toolbar>\r\n    </CustomHeader>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport useScrollTrigger from \"@mui/material/useScrollTrigger\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Zoom from \"@mui/material/Zoom\";\r\n\r\nconst ScrollTop = ({ children, window }) => {\r\n  const trigger = useScrollTrigger({\r\n    target: window ? window() : undefined,\r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector(\r\n      \"#back-to-top-anchor\"\r\n    );\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\",\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <Box\r\n        onClick={handleClick}\r\n        role=\"presentation\"\r\n        sx={{ position: \"fixed\", bottom: 86, right: 16 }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Zoom>\r\n  );\r\n};\r\nexport default ScrollTop;\r\n","import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\nimport ScrollTop from \"./ScrollTop\";\r\nimport { StyledFab } from \"../../StyledComponents/Button.styled\";\r\n\r\nconst Layout = (props) => {\r\n  const { content } = props;\r\n  const configuration = {\r\n    button: {\r\n      btnBackground: \"#0067df\",\r\n      fontColor: \"#F6F6F6\",\r\n      fontFamily: \"Roboto\",\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Toolbar id=\"back-to-top-anchor\" />\r\n      <Grid\r\n        container\r\n        sx={{\r\n          marginTop: \"3rem\",\r\n          marginLeft: \"2rem\",\r\n          marginRight: \"15rem\",\r\n          width: \"97vw\",\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        {content}\r\n      </Grid>\r\n      <ScrollTop {...props}>\r\n        <StyledFab\r\n          configuration={configuration}\r\n          size=\"small\"\r\n          aria-label=\"scroll back to top\"\r\n        >\r\n          <KeyboardArrowUpIcon />\r\n        </StyledFab>\r\n      </ScrollTop>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nfunction useIsMounted() {\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  function setStateIfMounted(setter, value) {\r\n    if (isMounted.current) {\r\n      setter(value);\r\n    }\r\n  }\r\n\r\n  return setStateIfMounted;\r\n}\r\n\r\nexport default useIsMounted;\r\n","import { useState, useEffect } from \"react\";\r\nimport useIsMounted from \"./isMounted\";\r\n\r\nfunction useFetchier(fetchFn, fetchOnQ = false, withoutLoadingOnMount = false) {\r\n  const setStateIfMounted = useIsMounted();\r\n  const [shouldFetch, setShouldFetch] = useState(!fetchOnQ);\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(!withoutLoadingOnMount && !fetchOnQ);\r\n\r\n  useEffect(() => {\r\n    async function asyncFetch() {\r\n      if (shouldFetch) {\r\n        try {\r\n          setLoading(true);\r\n          const response = await fetchFn();\r\n          if (response.data) {\r\n            setStateIfMounted(setData, response.data[0]);\r\n          }\r\n        } catch (e) {\r\n          console.log(e);\r\n        } finally {\r\n          setStateIfMounted(setLoading, false);\r\n          setStateIfMounted(setShouldFetch, false);\r\n        }\r\n      }\r\n    }\r\n    asyncFetch();\r\n  }, [shouldFetch]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return [data, loading, setShouldFetch.bind(null, true), setData];\r\n}\r\n\r\nexport default useFetchier;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport CreateModal from \"../Modals/CreateModal\";\r\nimport TrackerForm from \"./TrackerForm\";\r\nimport TrackerUser from \"./TrackerUser\";\r\nimport DeleteModal from \"../Modals/DeleteModal\";\r\nimport Layout from \"../Layout/Layout\";\r\nimport { getTrackerData, updateMeasurementData } from \"../../services/services\";\r\nimport useFetchier from \"../../hooks/Fetcher\";\r\nimport { sortBy } from \"lodash\";\r\nimport { AuthContext } from \"../Auth/AuthContext\";\r\n\r\nconst Tracker = (props) => {\r\n  const { authState } = useContext(AuthContext);\r\n\r\n  const [trackerData, loadingTrackerData, reFetchTrackerData, setTrackerData] =\r\n    useFetchier(\r\n      getTrackerData.bind(null, authState.token ? authState.token : null),\r\n      false\r\n    );\r\n\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [miniLoader, setMiniLoader] = useState(false);\r\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editUserMode, setEditUserMode] = useState(false);\r\n  const [userDeatils, setUserDetails] = useState(null);\r\n  const [measurements, setMeasurements] = useState(null);\r\n\r\n  const handleAddNewClick = (e, data) => {\r\n    setOpenModal(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (trackerData) {\r\n      setUserDetails(trackerData);\r\n\r\n      const sortedData = sortBy(trackerData.measurements, function (dateObj) {\r\n        return new Date(dateObj.date);\r\n      }).reverse();\r\n      setMeasurements(sortedData);\r\n    }\r\n  }, [trackerData]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleDelteClick = (id) => {\r\n    setSelectedItem(id);\r\n    setOpenDeleteModal(true);\r\n  };\r\n\r\n  const saveUpdateMeasurement = async (method, newValues) => {\r\n    let prepare;\r\n    switch (method) {\r\n      case \"create\":\r\n        measurements.push(newValues);\r\n        prepare = {\r\n          ...userDeatils,\r\n          measurements: measurements,\r\n        };\r\n        break;\r\n      case \"update\":\r\n        measurements[newValues.id] = newValues;\r\n        prepare = {\r\n          ...userDeatils,\r\n          measurements: measurements,\r\n        };\r\n        break;\r\n      case \"delete\":\r\n        measurements.splice(selectedItem, 1);\r\n        prepare = {\r\n          ...userDeatils,\r\n          measurements: measurements,\r\n        };\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    try {\r\n      const response = await updateMeasurementData(\r\n        userDeatils.docID,\r\n        prepare,\r\n        authState.token\r\n      );\r\n      if (response) {\r\n        reFetchTrackerData();\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    } finally {\r\n      setEditMode(false);\r\n      setMiniLoader(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout\r\n        content={\r\n          <Grid container spacing={1} direction=\"row\">\r\n            <Backdrop\r\n              sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n              open={loadingTrackerData}\r\n            >\r\n              <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            <Box\r\n              component={Grid}\r\n              item\r\n              lg={8}\r\n              md={8}\r\n              sm={8}\r\n              xs={8}\r\n              display={{ lg: \"block\", md: \"block\", sm: \"block\", xs: \"block\" }}\r\n            >\r\n              {loadingTrackerData || editUserMode ? (\r\n                <Stack\r\n                  spacing={1}\r\n                  sx={{ margin: \"auto\" }}\r\n                  height={\"70vh\"}\r\n                  width={\"50vw\"}\r\n                >\r\n                  <Skeleton variant=\"text\" />\r\n                  <Skeleton variant=\"circular\" width={40} height={40} />\r\n                  <Skeleton\r\n                    variant=\"rectangular\"\r\n                    height={\"70vh\"}\r\n                    width={\"50vw\"}\r\n                  />\r\n                </Stack>\r\n              ) : (\r\n                <TrackerForm\r\n                  userDeatils={userDeatils}\r\n                  measurements={measurements}\r\n                  saveUpdateMeasurement={saveUpdateMeasurement}\r\n                  setEditMode={setEditMode}\r\n                  editMode={editMode}\r\n                  miniLoader={miniLoader}\r\n                  setMiniLoader={setMiniLoader}\r\n                  setOpenDeleteModal={setOpenDeleteModal}\r\n                  handleDelteClick={handleDelteClick}\r\n                  setSelectedItem={setSelectedItem}\r\n                  selectedItem={selectedItem}\r\n                  handleAddNewClick={handleAddNewClick}\r\n                />\r\n              )}\r\n            </Box>\r\n            <Grid\r\n              component={Box}\r\n              item\r\n              lg={4}\r\n              md={4}\r\n              sm={4}\r\n              xs={4}\r\n              display={{ lg: \"block\", md: \"block\", sm: \"none\", xs: \"none\" }}\r\n            >\r\n              <TrackerUser\r\n                userDeatils={userDeatils}\r\n                loadingTrackerData={loadingTrackerData}\r\n                setTrackerData={setTrackerData}\r\n                setEditUserMode={setEditUserMode}\r\n                editUserMode={editUserMode}\r\n                editMode={editMode}\r\n                reFetchTrackerData={reFetchTrackerData}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n      />\r\n      <CreateModal\r\n        openModal={openModal}\r\n        setOpenModal={setOpenModal}\r\n        saveUpdateMeasurement={saveUpdateMeasurement}\r\n      />\r\n      <DeleteModal\r\n        openDeleteModal={openDeleteModal}\r\n        setOpenDeleteModal={setOpenDeleteModal}\r\n        saveUpdateMeasurement={saveUpdateMeasurement}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default Tracker;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport Tracker from \"../Tracker/Tracker\";\r\nimport LoginPage from \"../Login/LoginPage\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <ProtectedRoute exact path=\"/tracker\" component={Tracker} />\r\n        <Route exact path=\"/\" component={LoginPage} />\r\n        <Route path=\"*\" component={LoginPage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport AppRouter from \"./Components/AppRouter/AppRouter\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport DateAdapter from \"@mui/lab/AdapterMoment\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport { AuthContextProvider } from \"./Components/Auth/AuthContext\";\r\n\r\nconst App = () => {\r\n  const theme = createTheme();\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <LocalizationProvider dateAdapter={DateAdapter}>\r\n        <AuthContextProvider>\r\n          <AppRouter />\r\n        </AuthContextProvider>\r\n      </LocalizationProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}
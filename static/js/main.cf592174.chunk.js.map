{"version":3,"sources":["Components/Tracker/TrackerUserEdit.module.scss","Components/Auth/AuthContext.js","Components/Modals/CredentialsModal.jsx","Components/Assets/pic1.png","services/services.js","hooks/isMounted.js","Components/Login/LoginPage.jsx","Components/AppRouter/ProtectedRoute.jsx","Components/Modals/CreateForm.jsx","Components/Modals/CreateModal.jsx","Components/Tracker/TrackerItem.jsx","Components/Tracker/TrackerItemEdit.jsx","Components/Tracker/TrackerForm.jsx","Components/Tracker/TrackerUserEdit.jsx","Components/Tracker/TrackerUser.jsx","Components/Modals/DeleteModal.jsx","StyledComponents/AppBar.styled.js","StyledComponents/Button.styled.js","StyledComponents/Typography.styled.js","Components/Layout/NavBar.jsx","Components/Layout/ScrollTop.jsx","Components/Layout/Layout.jsx","hooks/Fetcher.js","Components/Tracker/Tracker.jsx","Components/AppRouter/AppRouter.jsx","App.js","index.js"],"names":["module","exports","AuthContext","createContext","token","localStorage","getItem","refreshToken","email","initialState","authReducer","authState","action","type","setItem","clear","init","AuthContextProvider","props","useReducer","value","dispatch","Provider","children","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","CredentialsModal","openModal","setOpenModal","Modal","open","onClose","Box","sx","Typography","id","variant","component","mt","baseLink","getTrackerData","a","axios","get","headers","Authorization","data","updateMeasurementData","updatedValues","put","updateUserData","updatedUser","loginUser","user","post","useIsMounted","isMounted","useRef","useEffect","current","setter","Copyright","color","align","Link","href","target","rel","Date","getFullYear","LoginPage","useContext","setStateIfMounted","authorized","password","history","useHistory","useState","inputsError","setInputsError","setUser","showPassword","setShowPassword","isLoading","setIsloading","errors","Object","keys","forEach","propName","isEmpty","handleOnChange","e","name","onSubmit","content","isEqual","postUser","response","push","console","log","Grid","container","height","Backdrop","CircularProgress","item","xs","sm","md","backgroundImage","imageSrc","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","my","mx","display","flexDirection","alignItems","Avatar","m","FormControl","fullWidth","required","marginBottom","InputLabel","htmlFor","OutlinedInput","autoComplete","label","onChange","error","endAdornment","InputAdornment","IconButton","onClick","edge","Button","mb","disabled","ProtectedRoute","Component","rest","render","CreateForm","saveUpdateMeasurement","initObj","date","weight","newMeasurement","setNewMeasurement","saveNewMeasurement","isNaN","getTime","repackForSend","parseFloat","toFixed","Card","CardContent","flexWrap","size","DateTimePicker","newDate","_d","renderInput","params","TextField","CardActions","ButtonGroup","float","marginLeft","startIcon","CreateModal","Dialog","DialogContent","TrackerItem","handleEditMode","index","handleDelteClick","fontSize","gutterBottom","marginTop","setEditMode","miniLoader","setMiniLoader","updateMeasurement","setUpdateMeasurement","onSave","Stack","spacing","Skeleton","TrackerForm","userDeatils","measurements","editMode","setOpenDeleteModal","setSelectedItem","selectedItem","handleAddNewClick","timeFormater","dateToFormat","dateFormated","toLocaleTimeString","dateFormater","dateCreate","moment","format","Timeline","fontStyle","firstName","marginRight","map","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","py","px","TrackerItemEdit","TrackerUserEdit","reFetchTrackerData","setEditUserMode","fields","lastName","updateUser","setUpdateUser","repackObj","docID","formItemChangeHandler","fieldName","inputType","className","styles","buttonGroup","cancelButton","saveButton","TrackerUser","loadingTrackerData","editUserMode","Header","List","ListItem","secondaryAction","ListItemAvatar","ListItemText","primaryTypographyProps","fontWeight","primary","Item","other","borderRadius","textAlign","margin","gap","gridTemplateColumns","filter","allowEdit","DeleteModal","openDeleteModal","DialogActions","CustomHeader","styled","styledComponentProp","AppBar","configuration","footer","background","fontColor","fontFamily","header","StyledFab","button","btnBackground","Fab","StyledIconButton","StyledTypography","typography","NavBar","mainBackground","Toolbar","flexGrow","mr","ScrollTop","window","trigger","useScrollTrigger","undefined","disableHysteresis","threshold","Zoom","in","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","bottom","right","Layout","useFetchier","fetchFn","fetchOnQ","withoutLoadingOnMount","shouldFetch","setShouldFetch","setData","loading","setLoading","asyncFetch","bind","Tracker","trackerData","setTrackerData","setUserDetails","setMeasurements","sortedData","sortBy","dateObj","reverse","method","newValues","prepare","splice","direction","zIndex","theme","drawer","lg","AppRouter","exact","path","App","createTheme","ThemeProvider","CssBaseline","LocalizationProvider","dateAdapter","DateAdapter","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf592174.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGroup\":\"TrackerUserEdit_buttonGroup__2adun\",\"saveButton\":\"TrackerUserEdit_saveButton__2uBu_\",\"cancelButton\":\"TrackerUserEdit_cancelButton__1gXlB\"};","import React, { createContext, useReducer } from \"react\";\r\n\r\nconst AuthContext = createContext(null);\r\n//  using local storage instead of using session storage because it is a common practice for token storing\r\nconst token = localStorage.getItem(\"token\");\r\nconst refreshToken = localStorage.getItem(\"refreshToken\");\r\nconst email = localStorage.getItem(\"email\");\r\nconst initialState = {\r\n  token: token ? token : null,\r\n  refreshToken: refreshToken ? refreshToken : null,\r\n  email: email ? email : null,\r\n};\r\n\r\nconst authReducer = (authState, action) => {\r\n  // actions for setting, getting, and removing token\r\n  switch (action.type) {\r\n    case \"set\":\r\n      localStorage.setItem(\"token\", action.token);\r\n      localStorage.setItem(\"refreshToken\", action.refreshToken);\r\n      localStorage.setItem(\"email\", action.email);\r\n      return {\r\n        token: action.token,\r\n        refreshToken: action.refreshToken,\r\n        email: action.email,\r\n      };\r\n    case \"get\":\r\n      return { ...authState };\r\n    case \"del\":\r\n      localStorage.clear();\r\n      return { token: null, refreshToken: null, email: null };\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nconst init = (initialState) => {\r\n  return { ...initialState };\r\n};\r\n\r\nconst AuthContextProvider = (props) => {\r\n  // for the third argument check the link below for more info\r\n  // https://reactjs.org/docs/hooks-reference.html#lazy-initialization\r\n  const [authState, dispatch] = useReducer(authReducer, initialState, init);\r\n  // returning state with valid token and refresh token, and dispatch for actions\r\n  const value = { authState, dispatch };\r\n  return (\r\n    <AuthContext.Provider value={value}>{props.children}</AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, AuthContextProvider };\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\nconst CredentialsModal = ({ openModal, setOpenModal }) => {\r\n  // info modal in with credentials for login in\r\n  const handleClose = () => setOpenModal(false);\r\n\r\n  return (\r\n    <Modal\r\n      open={openModal}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box sx={style}>\r\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n          Credentials\r\n        </Typography>\r\n        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n          Please check your credentials.\r\n          <br />\r\n          Email: user@auth.com\r\n          <br />\r\n          Password: user1234\r\n        </Typography>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CredentialsModal;\r\n","export default __webpack_public_path__ + \"static/media/pic1.eaa224e8.png\";","import axios from \"axios\";\r\n\r\n// const baseLink = \"http://localhost:5000/api\";\r\nconst baseLink = \"https://backend-tracker.herokuapp.com/api\";\r\n\r\n// TODO deafult options header\r\n// const defaultOptions = {};\r\n\r\n// get user\r\nexport const getTrackerData = async (token) => {\r\n  const data = await axios.get(`${baseLink}/tracker/read`, {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\n// update one measurement\r\nexport const updateMeasurementData = async (id, updatedValues, token) => {\r\n  const data = await axios.put(\r\n    `${baseLink}/tracker/update/${id}`,\r\n    updatedValues,\r\n    {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    }\r\n  );\r\n  return data;\r\n};\r\n\r\n// update user\r\nexport const updateUserData = async (id, updatedUser, token) => {\r\n  const data = await axios.put(\r\n    `${baseLink}/tracker/update/${id}`,\r\n    updatedUser,\r\n    {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    }\r\n  );\r\n  return data;\r\n};\r\n\r\n// login\r\nexport const loginUser = async (user) => {\r\n  const data = await axios.post(`${baseLink}/login`, user);\r\n  return data;\r\n};\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nfunction useIsMounted() {\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  function setStateIfMounted(setter, value) {\r\n    if (isMounted.current) {\r\n      setter(value);\r\n    }\r\n  }\r\n\r\n  return setStateIfMounted;\r\n}\r\n\r\nexport default useIsMounted;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport CredentialsModal from \"../Modals/CredentialsModal\";\r\nimport imageSrc from \"../Assets/pic1.png\";\r\nimport { isEmpty, isEqual } from \"lodash\";\r\nimport { loginUser } from \"../../services/services\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Auth/AuthContext\";\r\nimport useIsMounted from \"../../hooks/isMounted\";\r\n\r\nconst Copyright = (props) => {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Copyright ©PredragStosic \"}\r\n      <br />\r\n      <Link\r\n        color=\"inherit\"\r\n        href=\"https://github.com/predragstosic1985/tracker-frontend\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Github repo frontend\r\n      </Link>\r\n      <br />\r\n      <Link\r\n        color=\"inherit\"\r\n        href=\"https://github.com/predragstosic1985/tracker-backend\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Github repo backend\r\n      </Link>{\" \"}\r\n      <br />\r\n      {new Date().getFullYear()}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst LoginPage = () => {\r\n  const { dispatch } = useContext(AuthContext);\r\n  const setStateIfMounted = useIsMounted();\r\n  const authorized = {\r\n    email: \"user@auth.com\",\r\n    password: \"user1234\",\r\n  };\r\n  const history = useHistory();\r\n  const initState = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const [inputsError, setInputsError] = useState({});\r\n  const [user, setUser] = useState(initState);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [isLoading, setIsloading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const errors = { ...inputsError };\r\n    Object.keys(errors).forEach((propName) => {\r\n      if (!isEmpty(user[propName])) {\r\n        delete errors[propName];\r\n      }\r\n    });\r\n    setInputsError(errors);\r\n  }, [user]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleOnChange = (e, data) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    setIsloading(true);\r\n    const errors = {};\r\n    Object.keys(user).forEach((propName) => {\r\n      if (isEmpty(user[propName])) {\r\n        errors[propName] = { content: \"Please add a value\" };\r\n      }\r\n    });\r\n    if (!isEmpty(errors)) {\r\n      setInputsError(errors);\r\n      setIsloading(false);\r\n    } else if (!isEqual(user, authorized)) {\r\n      setOpenModal(true);\r\n      setIsloading(false);\r\n    } else {\r\n      postUser();\r\n    }\r\n  };\r\n\r\n  const postUser = async () => {\r\n    try {\r\n      const response = await loginUser(user);\r\n\r\n      if (response) {\r\n        history.push(\"/tracker\");\r\n        dispatch({\r\n          type: \"set\",\r\n          token: response.data.token,\r\n          refreshToken: response.data.refreshToken,\r\n          email: response.data.email,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setStateIfMounted(setIsloading, false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\r\n      <Backdrop open={isLoading}>\r\n        <CircularProgress color=\"primary\" />\r\n      </Backdrop>\r\n      <Grid\r\n        item\r\n        xs={false}\r\n        sm={4}\r\n        md={7}\r\n        sx={{\r\n          // backgroundImage: 'url(https://source.unsplash.com/random)',\r\n          backgroundImage: `url(${imageSrc})`,\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundColor: (t) =>\r\n            t.palette.mode === \"light\"\r\n              ? t.palette.grey[50]\r\n              : t.palette.grey[900],\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n        }}\r\n      />\r\n\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <Box\r\n          sx={{\r\n            my: 8,\r\n            mx: 4,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            <LockOutlinedIcon color={isLoading ? \"disabled\" : \"inherit\"} />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" sx={{ mt: 1 }}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              fullWidth={true}\r\n              required\r\n              sx={{ marginBottom: \"1rem\" }}\r\n            >\r\n              <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n              <OutlinedInput\r\n                autoComplete=\"off\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type={\"text\"}\r\n                label=\"Email\"\r\n                onChange={handleOnChange}\r\n                error={!!inputsError.email}\r\n                value={user.email}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <PersonOutlineIcon />\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n            <FormControl variant=\"outlined\" fullWidth={true} required>\r\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n              <OutlinedInput\r\n                id=\"password\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                autoComplete=\"off\"\r\n                error={!!inputsError.password}\r\n                value={user.password}\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                onChange={handleOnChange}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={onSubmit}\r\n              fullWidth={true}\r\n              sx={{ mt: 3, mb: 2 }}\r\n              disabled={isLoading}\r\n            >\r\n              Sign in\r\n            </Button>\r\n            <Copyright sx={{ mt: 5 }} />\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n      <CredentialsModal openModal={openModal} setOpenModal={setOpenModal} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default LoginPage;\r\n","import React, { useContext } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Auth/AuthContext\";\r\nimport LoginPage from \"../Login/LoginPage\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  // protected route\r\n  // calling authState for token check\r\n  const { authState } = useContext(AuthContext);\r\n\r\n  // {...rest} represents all props for example some custom prop via router\r\n  // {...props} represents all dependency props for a component like history etc.\r\n  return (\r\n    <>\r\n      <Route\r\n        {...rest}\r\n        render={(props) => {\r\n          return authState.token ? (\r\n            <>\r\n              <Component {...rest} {...props} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <LoginPage />\r\n            </>\r\n          );\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default ProtectedRoute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nconst CreateForm = ({ setOpenModal, saveUpdateMeasurement }) => {\r\n  // modal for adding new measurement\r\n  const initObj = {\r\n    id: \"\",\r\n    date: new Date(),\r\n    weight: \"\",\r\n  };\r\n  const [newMeasurement, setNewMeasurement] = useState(initObj);\r\n  const [inputsError, setInputsError] = useState({});\r\n\r\n  useEffect(() => {\r\n    const errors = { ...inputsError };\r\n    Object.keys(errors).forEach((propName) => {\r\n      if (!isEmpty(newMeasurement[propName])) {\r\n        delete errors[propName];\r\n      }\r\n    });\r\n    setInputsError(errors);\r\n  }, [newMeasurement]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onSubmit = () => {\r\n    const errors = {};\r\n    Object.keys(newMeasurement).forEach((propName) => {\r\n      if (isEmpty(newMeasurement[propName])) {\r\n        if (propName === \"weight\") {\r\n          errors[propName] = { content: \"Please add a value\" };\r\n        }\r\n      }\r\n    });\r\n    isEmpty(errors)\r\n      ? saveNewMeasurement(newMeasurement)\r\n      : setInputsError(errors);\r\n  };\r\n\r\n  const saveNewMeasurement = (e, data) => {\r\n    if (!isNaN(newMeasurement.date.getTime())) {\r\n      const repackForSend = {\r\n        ...newMeasurement,\r\n        date: newMeasurement.date.getTime(),\r\n        weight: parseFloat(newMeasurement.weight).toFixed(2),\r\n      };\r\n      saveUpdateMeasurement(\"create\", repackForSend);\r\n      setOpenModal(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const handleChangeDate = (newDate) => {\r\n    if (newDate) {\r\n      setNewMeasurement({ ...newMeasurement, date: newDate._d });\r\n    }\r\n  };\r\n\r\n  const handleOnChange = ({ target }) => {\r\n    setNewMeasurement({ ...newMeasurement, weight: target.value });\r\n  };\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Box\r\n          sx={{ display: \"flex\", flexWrap: \"wrap\" }}\r\n          component=\"form\"\r\n          autoComplete=\"off\"\r\n        >\r\n          <FormControl sx={{ m: 1 }} variant=\"outlined\" size=\"small\" fullWidth>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-weight\"\r\n              type={\"number\"}\r\n              value={newMeasurement.weight}\r\n              error={!!inputsError.weight}\r\n              onChange={handleOnChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton aria-label=\"weight\" edge=\"end\">\r\n                    kg\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n          <FormControl sx={{ m: 1 }} variant=\"outlined\" size=\"small\" fullWidth>\r\n            <DateTimePicker\r\n              label=\"Select Date and Time\"\r\n              value={newMeasurement.date}\r\n              onChange={handleChangeDate}\r\n              renderInput={(params) => <TextField {...params} />}\r\n            />\r\n          </FormControl>\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions>\r\n        <ButtonGroup sx={{ float: \"right\", marginLeft: \"auto\" }}>\r\n          <Button\r\n            onClick={handleClose}\r\n            color=\"inherit\"\r\n            variant=\"contained\"\r\n            startIcon={<CancelIcon />}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={onSubmit}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<CheckIcon />}\r\n          >\r\n            Save\r\n          </Button>\r\n        </ButtonGroup>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CreateForm;\r\n","import React from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport CreateForm from \"./CreateForm\";\r\n\r\nconst CreateModal = ({ openModal, setOpenModal, saveUpdateMeasurement }) => {\r\n  return (\r\n    <Dialog open={openModal} aria-labelledby=\"draggable-dialog-title\">\r\n      <DialogContent>\r\n        <CreateForm\r\n          openModal={openModal}\r\n          setOpenModal={setOpenModal}\r\n          saveUpdateMeasurement={saveUpdateMeasurement}\r\n        />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default CreateModal;\r\n","import React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\r\n\r\nconst TrackerItem = ({\r\n  handleEditMode,\r\n  weight,\r\n  date,\r\n  index,\r\n  handleDelteClick,\r\n}) => {\r\n  return (\r\n    <Card sx={{ height: \"12rem\" }}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" component=\"span\">\r\n          {weight}kg\r\n        </Typography>\r\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n          {date}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <div style={{ float: \"right\", marginLeft: \"auto\", marginTop: \"2rem\" }}>\r\n          <IconButton aria-label=\"edit\" onClick={() => handleEditMode(index)}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            color=\"error\"\r\n            aria-label=\"delete\"\r\n            onClick={() => handleDelteClick(index)}\r\n          >\r\n            <DeleteOutlineIcon />\r\n          </IconButton>\r\n        </div>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\nexport default TrackerItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport Box from \"@mui/material/Box\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nconst TrackerItem = ({\r\n  setEditMode,\r\n  date,\r\n  weight,\r\n  saveUpdateMeasurement,\r\n  index,\r\n  miniLoader,\r\n  setMiniLoader,\r\n}) => {\r\n  // milliseconds = date.getTime();\r\n  const initObj = {\r\n    id: \"\",\r\n    date: new Date(),\r\n    weight: \"\",\r\n  };\r\n\r\n  const [updateMeasurement, setUpdateMeasurement] = useState(initObj);\r\n  const [inputsError, setInputsError] = useState({});\r\n\r\n  useEffect(() => {\r\n    const errors = { ...inputsError };\r\n    Object.keys(errors).forEach((propName) => {\r\n      if (!isEmpty(updateMeasurement[propName])) {\r\n        delete errors[propName];\r\n      }\r\n    });\r\n    setInputsError(errors);\r\n  }, [updateMeasurement]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (date && weight) {\r\n      setUpdateMeasurement({\r\n        id: index,\r\n        date: new Date(date),\r\n        weight: parseFloat(weight).toFixed(2),\r\n      });\r\n    }\r\n  }, [date, weight, index]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleChangeDate = (newDate) => {\r\n    if (newDate) {\r\n      setUpdateMeasurement({ ...updateMeasurement, date: newDate._d });\r\n    }\r\n  };\r\n\r\n  const handleOnChange = ({ target }) => {\r\n    setUpdateMeasurement({ ...updateMeasurement, weight: target.value });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const errors = {};\r\n    Object.keys(updateMeasurement).forEach((propName) => {\r\n      if (isEmpty(updateMeasurement[propName])) {\r\n        if (propName === \"weight\") {\r\n          errors[propName] = { content: \"Please add a value\" };\r\n        }\r\n      }\r\n    });\r\n    isEmpty(errors) && !isNaN(updateMeasurement.date.getTime())\r\n      ? onSave(updateMeasurement)\r\n      : setInputsError(errors);\r\n  };\r\n\r\n  const onSave = () => {\r\n    setMiniLoader(true);\r\n    const repackForSend = {\r\n      ...updateMeasurement,\r\n      date: updateMeasurement.date.getTime(),\r\n      weight: parseFloat(updateMeasurement.weight).toFixed(2),\r\n    };\r\n    saveUpdateMeasurement(\"update\", repackForSend);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {miniLoader ? (\r\n        <Stack spacing={1}>\r\n          <Skeleton variant=\"text\" />\r\n          <Skeleton variant=\"circular\" width={40} height={40} />\r\n          <Skeleton variant=\"rectangular\" width={\"100%\"} height={100} />\r\n        </Stack>\r\n      ) : (\r\n        <Card>\r\n          <CardContent>\r\n            <Box\r\n              sx={{ display: \"flex\", flexWrap: \"wrap\" }}\r\n              component=\"form\"\r\n              autoComplete=\"off\"\r\n            >\r\n              <FormControl\r\n                sx={{ m: 1 }}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n              >\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-weight\"\r\n                  type={\"number\"}\r\n                  value={updateMeasurement.weight}\r\n                  error={!!inputsError.weight}\r\n                  onChange={handleOnChange}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton aria-label=\"weight\" edge=\"end\">\r\n                        kg\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n              <FormControl\r\n                sx={{ m: 1 }}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n              >\r\n                <DateTimePicker\r\n                  label=\"Select Date and Time\"\r\n                  value={updateMeasurement.date}\r\n                  onChange={handleChangeDate}\r\n                  renderInput={(params) => <TextField {...params} />}\r\n                />\r\n              </FormControl>\r\n            </Box>\r\n          </CardContent>\r\n          <CardActions>\r\n            <ButtonGroup sx={{ float: \"right\", marginLeft: \"auto\" }}>\r\n              <Button\r\n                onClick={() => setEditMode(false)}\r\n                color=\"inherit\"\r\n                variant=\"contained\"\r\n                startIcon={<CancelIcon />}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={onSubmit}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<CheckIcon />}\r\n              >\r\n                Save\r\n              </Button>\r\n            </ButtonGroup>\r\n          </CardActions>\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default TrackerItem;\r\n","import React from \"react\";\r\nimport Timeline from \"@mui/lab/Timeline\";\r\nimport TimelineItem from \"@mui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@mui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@mui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@mui/lab/TimelineContent\";\r\nimport TimelineOppositeContent from \"@mui/lab/TimelineOppositeContent\";\r\nimport TimelineDot from \"@mui/lab/TimelineDot\";\r\nimport FitnessCenterIcon from \"@mui/icons-material/FitnessCenter\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TrackerItem from \"./TrackerItem\";\r\nimport TrackerItemEdit from \"./TrackerItemEdit\";\r\nimport moment from \"moment\";\r\n\r\nconst TrackerForm = ({\r\n  userDeatils,\r\n  measurements,\r\n  saveUpdateMeasurement,\r\n  setEditMode,\r\n  editMode,\r\n  miniLoader,\r\n  setMiniLoader,\r\n  setOpenDeleteModal,\r\n  handleDelteClick,\r\n  setSelectedItem,\r\n  selectedItem,\r\n  handleAddNewClick,\r\n}) => {\r\n  // format time\r\n  const timeFormater = (dateToFormat) => {\r\n    let dateFormated = \"\";\r\n    if (dateToFormat) {\r\n      const dateCreate = new Date(dateToFormat);\r\n      dateFormated = dateCreate.toLocaleTimeString();\r\n    }\r\n    return dateFormated;\r\n  };\r\n\r\n  // format date\r\n  const dateFormater = (dateToFormat) => {\r\n    let dateFormated = \"\";\r\n    if (dateToFormat) {\r\n      const dateCreate = new Date(dateToFormat);\r\n      dateFormated = moment(dateCreate).format(\"Do MMMM YYYY\");\r\n    }\r\n    return dateFormated;\r\n  };\r\n\r\n  const handleEditMode = (id) => {\r\n    setSelectedItem(id);\r\n    setEditMode(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Timeline position=\"alternate\" sx={{ bgcolor: \"#f5f5f5\" }}>\r\n        <Typography\r\n          variant=\"h6\"\r\n          component=\"span\"\r\n          align=\"center\"\r\n          sx={{ marginTop: \"1rem\", fontStyle: \"oblique\" }}\r\n        >\r\n          Welcome {userDeatils ? userDeatils.firstName : \"\"}\r\n        </Typography>\r\n        <Button\r\n          onClick={handleAddNewClick}\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          disabled={editMode}\r\n          sx={{\r\n            width: \"8rem\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"1rem\",\r\n            marginBottom: \"1rem\",\r\n          }}\r\n        >\r\n          Add new\r\n        </Button>\r\n        {measurements ? (\r\n          measurements.map((item, index) => (\r\n            <TimelineItem key={index}>\r\n              <TimelineOppositeContent\r\n                sx={{ m: \"auto 0\" }}\r\n                align=\"right\"\r\n                variant=\"body2\"\r\n                color=\"text.secondary\"\r\n              >\r\n                {timeFormater(measurements[index][\"date\"])}\r\n              </TimelineOppositeContent>\r\n              <TimelineSeparator>\r\n                <TimelineDot>\r\n                  <FitnessCenterIcon />\r\n                </TimelineDot>\r\n                <TimelineConnector />\r\n              </TimelineSeparator>\r\n              <TimelineContent sx={{ py: \"12px\", px: 2 }}>\r\n                {editMode && selectedItem === index ? (\r\n                  <TrackerItemEdit\r\n                    setEditMode={setEditMode}\r\n                    date={measurements[index][\"date\"]}\r\n                    weight={measurements[index][\"weight\"]}\r\n                    saveUpdateMeasurement={saveUpdateMeasurement}\r\n                    index={index}\r\n                    miniLoader={miniLoader}\r\n                    setMiniLoader={setMiniLoader}\r\n                  />\r\n                ) : (\r\n                  <TrackerItem\r\n                    weight={measurements[index][\"weight\"]}\r\n                    date={dateFormater(measurements[index][\"date\"])}\r\n                    handleEditMode={handleEditMode}\r\n                    setOpenDeleteModal={setOpenDeleteModal}\r\n                    handleDelteClick={handleDelteClick}\r\n                    index={index}\r\n                  />\r\n                )}\r\n              </TimelineContent>\r\n            </TimelineItem>\r\n          ))\r\n        ) : (\r\n          <div />\r\n        )}\r\n      </Timeline>\r\n    </>\r\n  );\r\n};\r\nexport default TrackerForm;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport { isEmpty } from \"lodash\";\r\nimport { updateUserData } from \"../../services/services\";\r\nimport { AuthContext } from \"../Auth/AuthContext\";\r\nimport styles from \"./TrackerUserEdit.module.scss\";\r\n\r\nconst TrackerUserEdit = ({\r\n  reFetchTrackerData,\r\n  setEditUserMode,\r\n  userDeatils,\r\n  fields,\r\n}) => {\r\n  const { authState } = useContext(AuthContext);\r\n  const [updateUser, setUpdateUser] = useState(\r\n    userDeatils\r\n      ? { firstName: userDeatils.firstName, lastName: userDeatils.lastName }\r\n      : {\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n        }\r\n  );\r\n  const [inputsError, setInputsError] = useState({});\r\n\r\n  useEffect(() => {\r\n    const errors = { ...inputsError };\r\n    Object.keys(errors).forEach((propName) => {\r\n      if (!isEmpty(updateUser[propName])) {\r\n        delete errors[propName];\r\n      }\r\n    });\r\n    setInputsError(errors);\r\n  }, [updateUser]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onSubmit = () => {\r\n    const errors = {};\r\n    Object.keys(updateUser).forEach((propName) => {\r\n      if (isEmpty(updateUser[propName])) {\r\n        errors[propName] = {\r\n          content: \"Please add value.\",\r\n        };\r\n      }\r\n    });\r\n    isEmpty(errors) ? onSave(updateUser) : setInputsError(errors);\r\n  };\r\n\r\n  const onSave = async () => {\r\n    setEditUserMode(false);\r\n    const repackObj = {\r\n      ...userDeatils,\r\n      firstName: updateUser.firstName,\r\n      lastName: updateUser.lastName,\r\n    };\r\n\r\n    try {\r\n      const response = await updateUserData(\r\n        userDeatils.docID,\r\n        repackObj,\r\n        authState.token\r\n      );\r\n      if (response) {\r\n        reFetchTrackerData();\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    } finally {\r\n      setEditUserMode(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setEditUserMode(false);\r\n  };\r\n\r\n  const formItemChangeHandler = ({ target }) => {\r\n    setUpdateUser({\r\n      ...updateUser,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          display: \"grid\",\r\n        }}\r\n      >\r\n        {userDeatils ? (\r\n          fields.map(({ fieldName, propName, inputType }, index) => (\r\n            <FormControl\r\n              key={index}\r\n              variant=\"outlined\"\r\n              fullWidth={true}\r\n              required\r\n              sx={{ marginBottom: \"1rem\" }}\r\n            >\r\n              <InputLabel htmlFor={fieldName}>{fieldName}</InputLabel>\r\n              <OutlinedInput\r\n                autoComplete=\"off\"\r\n                id={propName}\r\n                name={propName}\r\n                type={inputType}\r\n                label={fieldName}\r\n                onChange={formItemChangeHandler}\r\n                error={!!inputsError[propName]}\r\n                value={updateUser[propName]}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <PersonOutlineIcon />\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n          ))\r\n        ) : (\r\n          <Box />\r\n        )}\r\n        <ButtonGroup className={styles.buttonGroup}>\r\n          <Button\r\n            onClick={handleClose}\r\n            variant=\"contained\"\r\n            className={styles.cancelButton}\r\n            startIcon={<CancelIcon />}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={onSubmit}\r\n            variant=\"contained\"\r\n            className={styles.saveButton}\r\n            startIcon={<CheckIcon />}\r\n          >\r\n            Save\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\nexport default TrackerUserEdit;\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport TrackerUserEdit from \"./TrackerUserEdit\";\r\nimport fields from \"./fields.json\";\r\n\r\nconst TrackerUser = ({\r\n  userDeatils,\r\n  loadingTrackerData,\r\n  editUserMode,\r\n  setEditUserMode,\r\n  reFetchTrackerData,\r\n  editMode,\r\n}) => {\r\n  const Header = (props) => {\r\n    const handleEditUser = () => {\r\n      setEditUserMode(true);\r\n    };\r\n    return (\r\n      <Grid item xs={12} md={12}>\r\n        <List>\r\n          <ListItem\r\n            secondaryAction={\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"edit\"\r\n                onClick={handleEditUser}\r\n                disabled={editUserMode || editMode}\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n            }\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <PersonOutlineIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primaryTypographyProps={{\r\n                color: \"#009fdf\",\r\n                fontWeight: \"700\",\r\n                fontSize: 19,\r\n                fontStyle: \"oblique\",\r\n              }}\r\n              primary=\"User details\"\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const Item = (props) => {\r\n    const { sx, ...other } = props;\r\n    return (\r\n      <Box\r\n        sx={{\r\n          bgcolor: \"#fff\",\r\n          p: 1,\r\n          borderRadius: 1,\r\n          textAlign: \"left\",\r\n          fontSize: 17,\r\n          fontWeight: \"600\",\r\n          margin: \"0.3rem\",\r\n          ...sx,\r\n        }}\r\n        {...other}\r\n      />\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {loadingTrackerData ? (\r\n        <Stack\r\n          spacing={1}\r\n          sx={{ margin: \"auto\" }}\r\n          height={\"70vh\"}\r\n          width={\"50vw\"}\r\n        >\r\n          <Skeleton variant=\"text\" width={\"30vw\"} />\r\n          <Skeleton variant=\"circular\" width={40} height={40} />\r\n          <Skeleton variant=\"rectangular\" height={\"20vh\"} width={\"30vw\"} />\r\n        </Stack>\r\n      ) : (\r\n        <Grid\r\n          sx={{\r\n            marginTop: \"1rem\",\r\n            bgcolor: \"#f5f5f5\",\r\n            color: \"#e4e6e7\",\r\n          }}\r\n        >\r\n          <Header />\r\n          {userDeatils && !editUserMode ? (\r\n            fields.map(({ fieldName, propName }, index) => (\r\n              <Box\r\n                key={index}\r\n                sx={{\r\n                  display: \"grid\",\r\n                  gap: 2,\r\n                  gridTemplateColumns: \"repeat(2, 1fr)\",\r\n                }}\r\n              >\r\n                <Item sx={{ color: \"#009fdf\" }}>{fieldName}</Item>\r\n                <Item sx={{ color: \"#9a9797\" }}> {userDeatils[propName]}</Item>\r\n              </Box>\r\n            ))\r\n          ) : (\r\n            <Box />\r\n          )}\r\n          {editUserMode ? (\r\n            <TrackerUserEdit\r\n              userDeatils={userDeatils}\r\n              fields={fields.filter(({ allowEdit }) => allowEdit)}\r\n              setEditUserMode={setEditUserMode}\r\n              reFetchTrackerData={reFetchTrackerData}\r\n            />\r\n          ) : (\r\n            <div />\r\n          )}\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default TrackerUser;\r\n","import React from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst DeleteModal = ({\r\n  openDeleteModal,\r\n  setOpenDeleteModal,\r\n  saveUpdateMeasurement,\r\n}) => {\r\n  const handleOnDeleteClick = () => {\r\n    setOpenDeleteModal(false);\r\n    saveUpdateMeasurement(\"delete\");\r\n  };\r\n  return (\r\n    <Dialog open={openDeleteModal} aria-labelledby=\"draggable-dialog-title\">\r\n      <DialogContent>\r\n        Are you sure you want to delete the measurement?\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <ButtonGroup sx={{ float: \"right\", marginLeft: \"auto\" }}>\r\n          <Button\r\n            color=\"inherit\"\r\n            onClick={() => setOpenDeleteModal(false)}\r\n            variant=\"contained\"\r\n            startIcon={<CancelIcon />}\r\n          >\r\n            No\r\n          </Button>\r\n          <Button\r\n            onClick={handleOnDeleteClick}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<CheckIcon />}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </ButtonGroup>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default DeleteModal;\r\n","import styled from 'styled-components';\r\nimport AppBar from '@mui/material/AppBar';\r\n\r\nexport const CustomFooter = styled(({ styledComponentProp, ...rest }) => (\r\n  <AppBar color='inherit' {...rest}></AppBar>\r\n))`\r\n  background-color: ${props =>\r\n    props.configuration.footer.background} !important;\r\n  background: ${props => props.configuration.footer.background} !important;\r\n  color: ${props => props.configuration.footer.fontColor}!important;\r\n  font-family: ${props => props.configuration.footer.fontFamily}!important;\r\n`;\r\n\r\nexport const CustomHeader = styled(({ styledComponentProp, ...rest }) => (\r\n  <AppBar color='inherit' {...rest}></AppBar>\r\n))`\r\n  background-color: ${props =>\r\n    props.configuration.header.background} !important;\r\n  background: ${props => props.configuration.header.background} !important;\r\n  color: ${props => props.configuration.header.fontColor}!important;\r\n  font-family: ${props => props.configuration.header.fontFamily}!important;\r\n`;\r\n","import styled from 'styled-components';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nexport const StyledButtonPlain = styled(Button)`\r\n  color: white !important;\r\n  background-color: red !important;\r\n  &:hover {\r\n    color: blue !important;\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled(({ styledComponentProp, ...rest }) => (\r\n  <Button {...rest}></Button>\r\n))`\r\n  background-color: ${props =>\r\n    props.configuration.button.btnBackground} !important;\r\n  color: ${props => props.configuration.button.fontColor}!important;\r\n  font-family: ${props => props.configuration.button.fontFamily}!important;\r\n`;\r\n\r\nexport const StyledFab = styled(({ styledComponentProp, ...rest }) => (\r\n  <Fab {...rest}></Fab>\r\n))`\r\n  background-color: ${props =>\r\n    props.configuration.button.btnBackground} !important;\r\n  color: ${props => props.configuration.button.fontColor}!important;\r\n  font-family: ${props => props.configuration.button.fontFamily}!important;\r\n`;\r\n\r\nexport const StyledIconButton = styled(({ styledComponentProp, ...rest }) => (\r\n  <IconButton {...rest}></IconButton>\r\n))`\r\n  background-color: ${props =>\r\n    props.configuration.button.btnBackground} !important;\r\n  color: ${props => props.configuration.button.fontColor}!important;\r\n  font-family: ${props => props.configuration.button.fontFamily}!important;\r\n`;\r\n","import styled from 'styled-components';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nexport const StyledTypography = styled(({ styledComponentProp, ...rest }) => (\r\n  <Typography {...rest}></Typography>\r\n))`\r\n  color: ${props => props.configuration.typography.fontColor}!important;\r\n  font-family: ${props => props.configuration.typography.fontFamily}!important;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CustomHeader } from \"../../StyledComponents/AppBar.styled\";\r\nimport { StyledIconButton } from \"../../StyledComponents/Button.styled\";\r\nimport { StyledTypography } from \"../../StyledComponents/Typography.styled\";\r\nimport { AuthContext } from \"../Auth/AuthContext\";\r\n\r\nconst NavBar = (props) => {\r\n  const { dispatch } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const configuration = {\r\n    mainBackground: \"#b51783\",\r\n    button: {\r\n      btnBackground: \"#0067df\",\r\n      fontColor: \"#F6F6F6\",\r\n      fontFamily: \"Roboto\",\r\n    },\r\n    typography: {\r\n      fontColor: \"#F6F6F6\",\r\n      fontFamily: \"Roboto\",\r\n    },\r\n    header: {\r\n      background: \"#009fdf\",\r\n      fontColor: \"#F6F6F6\",\r\n      fontFamily: \"Roboto\",\r\n    },\r\n  };\r\n\r\n  const logutUser = () => {\r\n    history.push(\"/\");\r\n    dispatch({\r\n      type: \"del\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <CustomHeader configuration={configuration}>\r\n      <Toolbar>\r\n        <StyledTypography\r\n          configuration={configuration}\r\n          variant=\"h6\"\r\n          sx={{ flexGrow: 1, marginLeft: \"1rem\" }}\r\n        >\r\n          Tracker\r\n        </StyledTypography>\r\n        <StyledIconButton\r\n          configuration={configuration}\r\n          onClick={logutUser}\r\n          size=\"large\"\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          sx={{ mr: 2 }}\r\n        >\r\n          <PowerSettingsNewIcon />\r\n        </StyledIconButton>\r\n      </Toolbar>\r\n    </CustomHeader>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport useScrollTrigger from \"@mui/material/useScrollTrigger\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Zoom from \"@mui/material/Zoom\";\r\n\r\nconst ScrollTop = ({ children, window }) => {\r\n  const trigger = useScrollTrigger({\r\n    target: window ? window() : undefined,\r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector(\r\n      \"#back-to-top-anchor\"\r\n    );\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\",\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <Box\r\n        onClick={handleClick}\r\n        role=\"presentation\"\r\n        sx={{ position: \"fixed\", bottom: 86, right: 16 }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Zoom>\r\n  );\r\n};\r\nexport default ScrollTop;\r\n","import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\nimport ScrollTop from \"./ScrollTop\";\r\nimport { StyledFab } from \"../../StyledComponents/Button.styled\";\r\n\r\nconst Layout = (props) => {\r\n  // Layout with an action button that can be reused\r\n  const { content } = props;\r\n  const configuration = {\r\n    button: {\r\n      btnBackground: \"#0067df\",\r\n      fontColor: \"#F6F6F6\",\r\n      fontFamily: \"Roboto\",\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Toolbar id=\"back-to-top-anchor\" />\r\n      <Grid\r\n        container\r\n        sx={{\r\n          marginTop: \"3rem\",\r\n          marginLeft: \"2rem\",\r\n          marginRight: \"15rem\",\r\n          width: \"97vw\",\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        {content}\r\n      </Grid>\r\n      <ScrollTop {...props}>\r\n        <StyledFab\r\n          configuration={configuration}\r\n          size=\"small\"\r\n          aria-label=\"scroll back to top\"\r\n        >\r\n          <KeyboardArrowUpIcon />\r\n        </StyledFab>\r\n      </ScrollTop>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { useState, useEffect } from \"react\";\r\nimport useIsMounted from \"./isMounted\";\r\n\r\n// ccustom hook for get request eventually returns data-pure data, loader boolean,\r\n// re-fetch function to trigger new get request and set state if needed\r\nfunction useFetchier(fetchFn, fetchOnQ = false, withoutLoadingOnMount = false) {\r\n  const setStateIfMounted = useIsMounted();\r\n  const [shouldFetch, setShouldFetch] = useState(!fetchOnQ);\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(!withoutLoadingOnMount && !fetchOnQ);\r\n\r\n  useEffect(() => {\r\n    async function asyncFetch() {\r\n      if (shouldFetch) {\r\n        try {\r\n          setLoading(true);\r\n          const response = await fetchFn();\r\n          if (response.data) {\r\n            setStateIfMounted(setData, response.data[0]);\r\n          }\r\n        } catch (e) {\r\n          console.log(e);\r\n        } finally {\r\n          setStateIfMounted(setLoading, false);\r\n          setStateIfMounted(setShouldFetch, false);\r\n        }\r\n      }\r\n    }\r\n    asyncFetch();\r\n  }, [shouldFetch]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return [data, loading, setShouldFetch.bind(null, true), setData];\r\n}\r\n\r\nexport default useFetchier;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport CreateModal from \"../Modals/CreateModal\";\r\nimport TrackerForm from \"./TrackerForm\";\r\nimport TrackerUser from \"./TrackerUser\";\r\nimport DeleteModal from \"../Modals/DeleteModal\";\r\nimport Layout from \"../Layout/Layout\";\r\nimport { getTrackerData, updateMeasurementData } from \"../../services/services\";\r\nimport useFetchier from \"../../hooks/Fetcher\";\r\nimport { sortBy } from \"lodash\";\r\nimport { AuthContext } from \"../Auth/AuthContext\";\r\n\r\nconst Tracker = (props) => {\r\n  const { authState } = useContext(AuthContext);\r\n\r\n  const [trackerData, loadingTrackerData, reFetchTrackerData, setTrackerData] =\r\n    useFetchier(\r\n      getTrackerData.bind(null, authState.token ? authState.token : null),\r\n      false\r\n    );\r\n\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [miniLoader, setMiniLoader] = useState(false);\r\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editUserMode, setEditUserMode] = useState(false);\r\n  const [userDeatils, setUserDetails] = useState(null);\r\n  const [measurements, setMeasurements] = useState(null);\r\n\r\n  const handleAddNewClick = (e, data) => {\r\n    setOpenModal(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (trackerData) {\r\n      setUserDetails(trackerData);\r\n\r\n      const sortedData = sortBy(trackerData.measurements, function (dateObj) {\r\n        return new Date(dateObj.date);\r\n      }).reverse();\r\n      setMeasurements(sortedData);\r\n    }\r\n  }, [trackerData]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleDelteClick = (id) => {\r\n    setSelectedItem(id);\r\n    setOpenDeleteModal(true);\r\n  };\r\n\r\n  const saveUpdateMeasurement = async (method, newValues) => {\r\n    let prepare;\r\n    switch (method) {\r\n      case \"create\":\r\n        measurements.push(newValues);\r\n        prepare = {\r\n          ...userDeatils,\r\n          measurements: measurements,\r\n        };\r\n        break;\r\n      case \"update\":\r\n        measurements[newValues.id] = newValues;\r\n        prepare = {\r\n          ...userDeatils,\r\n          measurements: measurements,\r\n        };\r\n        break;\r\n      case \"delete\":\r\n        measurements.splice(selectedItem, 1);\r\n        prepare = {\r\n          ...userDeatils,\r\n          measurements: measurements,\r\n        };\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    try {\r\n      const response = await updateMeasurementData(\r\n        userDeatils.docID,\r\n        prepare,\r\n        authState.token\r\n      );\r\n      if (response) {\r\n        reFetchTrackerData();\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    } finally {\r\n      setEditMode(false);\r\n      setMiniLoader(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout\r\n        content={\r\n          <Grid container spacing={1} direction=\"row\">\r\n            <Backdrop\r\n              sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n              open={loadingTrackerData}\r\n            >\r\n              <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            <Box\r\n              component={Grid}\r\n              item\r\n              lg={8}\r\n              md={8}\r\n              sm={8}\r\n              xs={8}\r\n              display={{ lg: \"block\", md: \"block\", sm: \"block\", xs: \"block\" }}\r\n            >\r\n              {loadingTrackerData || editUserMode ? (\r\n                <Stack\r\n                  spacing={1}\r\n                  sx={{ margin: \"auto\" }}\r\n                  height={\"70vh\"}\r\n                  width={\"50vw\"}\r\n                >\r\n                  <Skeleton variant=\"text\" />\r\n                  <Skeleton variant=\"circular\" width={40} height={40} />\r\n                  <Skeleton\r\n                    variant=\"rectangular\"\r\n                    height={\"70vh\"}\r\n                    width={\"50vw\"}\r\n                  />\r\n                </Stack>\r\n              ) : (\r\n                <TrackerForm\r\n                  userDeatils={userDeatils}\r\n                  measurements={measurements}\r\n                  saveUpdateMeasurement={saveUpdateMeasurement}\r\n                  setEditMode={setEditMode}\r\n                  editMode={editMode}\r\n                  miniLoader={miniLoader}\r\n                  setMiniLoader={setMiniLoader}\r\n                  setOpenDeleteModal={setOpenDeleteModal}\r\n                  handleDelteClick={handleDelteClick}\r\n                  setSelectedItem={setSelectedItem}\r\n                  selectedItem={selectedItem}\r\n                  handleAddNewClick={handleAddNewClick}\r\n                />\r\n              )}\r\n            </Box>\r\n            <Grid\r\n              component={Box}\r\n              item\r\n              lg={4}\r\n              md={4}\r\n              sm={4}\r\n              xs={4}\r\n              display={{ lg: \"block\", md: \"block\", sm: \"none\", xs: \"none\" }}\r\n            >\r\n              <TrackerUser\r\n                userDeatils={userDeatils}\r\n                loadingTrackerData={loadingTrackerData}\r\n                setTrackerData={setTrackerData}\r\n                setEditUserMode={setEditUserMode}\r\n                editUserMode={editUserMode}\r\n                editMode={editMode}\r\n                reFetchTrackerData={reFetchTrackerData}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n      />\r\n      <CreateModal\r\n        openModal={openModal}\r\n        setOpenModal={setOpenModal}\r\n        saveUpdateMeasurement={saveUpdateMeasurement}\r\n      />\r\n      <DeleteModal\r\n        openDeleteModal={openDeleteModal}\r\n        setOpenDeleteModal={setOpenDeleteModal}\r\n        saveUpdateMeasurement={saveUpdateMeasurement}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default Tracker;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport Tracker from \"../Tracker/Tracker\";\r\nimport LoginPage from \"../Login/LoginPage\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <ProtectedRoute exact path=\"/tracker\" component={Tracker} />\r\n        <Route exact path=\"/\" component={LoginPage} />\r\n        <Route path=\"*\" component={LoginPage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport AppRouter from \"./Components/AppRouter/AppRouter\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport DateAdapter from \"@mui/lab/AdapterMoment\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport { AuthContextProvider } from \"./Components/Auth/AuthContext\";\r\n\r\nconst App = () => {\r\n  const theme = createTheme();\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <LocalizationProvider dateAdapter={DateAdapter}>\r\n        <AuthContextProvider>\r\n          <AppRouter />\r\n        </AuthContextProvider>\r\n      </LocalizationProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}